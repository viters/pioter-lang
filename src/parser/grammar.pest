whitespace = _{ " " | "\t" | "\n" | "\r" }
comment = _{ "#" ~ (!"#" ~ any)* ~ "#" }

lparen = _{ "(" }
rparen = _{ ")" }
lsquarebracket = _{ "[" }
rsquarebracket = _{ "]" }
lcurlybracket = _{ "{" }
rcurlybracket = _{ "}" }
arrow = _{ "~" }
comma = _{ "," }
colon = _{ ":" }
line = _{ "|" }

dump = _{ ^"dump" }
def = _{ ^"def" }
k_match = _{ ^"match" }
k_true = @{ ^"true" }
k_false = @{ ^"false" }
boolean = ${ k_true | k_false }

string = ${ "'" ~ inner_string ~ "'" }
inner_string = @{ (!"'" ~ any)* }
float = @{ "-"? ~ ('0'..'9')+ ~ "." ~ ('0'..'9')* }
integer = @{ "-"? ~ ('0'..'9')+ }
number = ${ float | integer }
constant = @{ ('a'..'z' | 'A'..'Z' ) ~ ('a'..'z' | 'A'..'Z' | '0'..'9')* | ( "+" | "-" | "*" | "/" | ">" | "<" | "=" | "|" | "&" | "%" | "!" )+}

p_start = { (lparen ~ p_def ~ rparen | lparen ~ p_dump ~ rparen)* }
p_dump = { dump ~ p_eip }
p_def = { def ~ constant ~ p_eip }
p_eip = { number | string | boolean | constant | p_list | p_funcall | p_fundef | lparen ~ p_eip ~ rparen }

p_fundef = { lparen ~ p_funparam ~ arrow ~ p_eip ~ rparen }
p_funparam = { lparen ~ p_funparam2 ~ rparen | lparen ~ rparen | p_funparam2 }
p_funparam2 = { constant ~ comma ~ p_funparam2 | constant }

p_funcall = { p_sfuncall | p_iifuncall }
p_sfuncall = { lparen ~ constant ~ p_funcallp ~ rparen }
p_iifuncall = { lparen ~ p_fundef ~ p_funcallp ~ rparen }
p_funcallp = { p_eip ~ p_funcallp | p_eip }

p_list = { lsquarebracket ~ p_listc ~ rsquarebracket | lsquarebracket ~ rsquarebracket }
p_listc = { p_eip ~ (comma ~ p_eip )*  }